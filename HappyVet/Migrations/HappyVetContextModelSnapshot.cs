// <auto-generated />
using System;
using HappyVet.Repos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappyVet.Migrations
{
    [DbContext(typeof(HappyVetContext))]
    partial class HappyVetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HappyVet.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaHoraConsulta")
                        .IsRequired()
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RegistroMascotaRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroMascotaRefId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("HappyVet.Models.ConsultaVacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VacunaRefId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaId");

                    b.HasIndex("VacunaRefId");

                    b.ToTable("ConsultaVacunas");
                });

            modelBuilder.Entity("HappyVet.Models.Detalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ListaPrecioRefId")
                        .HasColumnType("int");

                    b.Property<int>("PorcentajeDescuento")
                        .HasColumnType("int");

                    b.Property<decimal?>("TarifaPrecio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("VacunaRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioRefId");

                    b.HasIndex("VacunaRefId");

                    b.ToTable("Detalle");
                });

            modelBuilder.Entity("HappyVet.Models.Edad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Edad");
                });

            modelBuilder.Entity("HappyVet.Models.ListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("VacunaRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacunaRefId");

                    b.ToTable("ListaPrecio");
                });

            modelBuilder.Entity("HappyVet.Models.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Raza");
                });

            modelBuilder.Entity("HappyVet.Models.RegistroMascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EdadRefId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ImagemMascota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RazaRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TamañoRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAnimalRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EdadRefId");

                    b.HasIndex("RazaRefId");

                    b.HasIndex("TamañoRefId");

                    b.HasIndex("TipoAnimalRefId");

                    b.ToTable("Registro de Mascota");
                });

            modelBuilder.Entity("HappyVet.Models.Tamaño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tamaño");
                });

            modelBuilder.Entity("HappyVet.Models.TipoAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tipo Animal");
                });

            modelBuilder.Entity("HappyVet.Models.Vacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("HappyVet.Models.Consulta", b =>
                {
                    b.HasOne("HappyVet.Models.RegistroMascota", "RegistroMascota")
                        .WithMany()
                        .HasForeignKey("RegistroMascotaRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegistroMascota");
                });

            modelBuilder.Entity("HappyVet.Models.ConsultaVacuna", b =>
                {
                    b.HasOne("HappyVet.Models.Consulta", null)
                        .WithMany("Vacuna")
                        .HasForeignKey("ConsultaId");

                    b.HasOne("HappyVet.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("VacunaRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("HappyVet.Models.Detalle", b =>
                {
                    b.HasOne("HappyVet.Models.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioRefId");

                    b.HasOne("HappyVet.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("VacunaRefId");

                    b.Navigation("ListaPrecio");

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("HappyVet.Models.ListaPrecio", b =>
                {
                    b.HasOne("HappyVet.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("VacunaRefId");

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("HappyVet.Models.RegistroMascota", b =>
                {
                    b.HasOne("HappyVet.Models.Edad", "Edad")
                        .WithMany()
                        .HasForeignKey("EdadRefId");

                    b.HasOne("HappyVet.Models.Raza", "Raza")
                        .WithMany()
                        .HasForeignKey("RazaRefId");

                    b.HasOne("HappyVet.Models.Tamaño", "Tamaño")
                        .WithMany()
                        .HasForeignKey("TamañoRefId");

                    b.HasOne("HappyVet.Models.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("TipoAnimalRefId");

                    b.Navigation("Edad");

                    b.Navigation("Raza");

                    b.Navigation("Tamaño");

                    b.Navigation("TipoAnimal");
                });

            modelBuilder.Entity("HappyVet.Models.Consulta", b =>
                {
                    b.Navigation("Vacuna");
                });
#pragma warning restore 612, 618
        }
    }
}
