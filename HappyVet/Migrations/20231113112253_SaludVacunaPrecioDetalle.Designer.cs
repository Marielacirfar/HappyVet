// <auto-generated />
using System;
using HappyVet.Repos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HappyVet.Migrations
{
    [DbContext(typeof(HappyVetContext))]
    [Migration("20231113112253_SaludVacunaPrecioDetalle")]
    partial class SaludVacunaPrecioDetalle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HappyVet.Models.Edad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Edad");
                });

            modelBuilder.Entity("HappyVet.Models.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Raza");
                });

            modelBuilder.Entity("HappyVet.Models.RegistroMascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EdadRefId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ImagemMascota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RazaRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TamañoRefId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAnimalRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EdadRefId");

                    b.HasIndex("RazaRefId");

                    b.HasIndex("TamañoRefId");

                    b.HasIndex("TipoAnimalRefId");

                    b.ToTable("Registro de Mascota");
                });

            modelBuilder.Entity("HappyVet.Models.Tamaño", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tamaño");
                });

            modelBuilder.Entity("HappyVet.Models.TipoAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Tipo Animal");
                });

            modelBuilder.Entity("HappyVet.Models.RegistroMascota", b =>
                {
                    b.HasOne("HappyVet.Models.Edad", "Edad")
                        .WithMany()
                        .HasForeignKey("EdadRefId");

                    b.HasOne("HappyVet.Models.Raza", "Raza")
                        .WithMany()
                        .HasForeignKey("RazaRefId");

                    b.HasOne("HappyVet.Models.Tamaño", "Tamaño")
                        .WithMany()
                        .HasForeignKey("TamañoRefId");

                    b.HasOne("HappyVet.Models.TipoAnimal", "TipoAnimal")
                        .WithMany()
                        .HasForeignKey("TipoAnimalRefId");

                    b.Navigation("Edad");

                    b.Navigation("Raza");

                    b.Navigation("Tamaño");

                    b.Navigation("TipoAnimal");
                });
#pragma warning restore 612, 618
        }
    }
}
